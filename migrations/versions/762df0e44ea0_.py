"""empty message

Revision ID: 762df0e44ea0
Revises: cd62334986f2
Create Date: 2023-11-15 08:33:19.939222

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '762df0e44ea0'
down_revision = 'cd62334986f2'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # op.drop_table('item')
    # op.drop_table('store')
    # op.drop_table('tag')
    # op.drop_table('item_tags')
    # op.drop_table('user')
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
                existing_type=sa.REAL(),
                type_=sa.Float(precision=2),
                existing_nullable=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('items', schema=None) as batch_op:
        batch_op.alter_column('price',
                existing_type=sa.Float(precision=2),
                type_=sa.REAL(),
                existing_nullable=False)

    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='user_pkey'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_table('item_tags',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('tag_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['item_id'], ['item.id'], name='item_tags_item_id_fkey'),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], name='item_tags_tag_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='item_tags_pkey')
    )
    op.create_table('tag',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], name='tag_store_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='tag_pkey'),
    sa.UniqueConstraint('name', name='tag_name_key')
    )
    op.create_table('store',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('store_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='store_pkey'),
    sa.UniqueConstraint('name', name='store_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('item',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=80), autoincrement=False, nullable=False),
    sa.Column('price', sa.REAL(), autoincrement=False, nullable=False),
    sa.Column('store_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['store_id'], ['store.id'], name='item_store_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='item_pkey')
    )
    # ### end Alembic commands ###
